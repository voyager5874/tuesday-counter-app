{"version":3,"sources":["components/MainDisplay.tsx","components/Button.tsx","components/LimitValueInput.tsx","components/Settings.tsx","state/counterActionsReducer.ts","App.tsx","reportWebVitals.ts","index.tsx","components/Settings.module.css"],"names":["MainDisplay","props","Display","error","DisplayMainValue","limitReached","finish","mainValue","DisplayAdditionalInfoWrapper","CurrentLimitValue","value1Label","value1","value2Label","value2","styled","div","Button","BlueButton","disabled","onClick","callback","name","button","LimitValueInput","LimitValueSetContainer","Label","label","LimitInputField","style","display","height","paddingTop","paddingBottom","currentValue","LimitValueControlsWrapper","LimitValueControlButtons","sendValueCallback","input","Settings","visibility","visible","s","settingsVisible","settingsInvisible","SettingsWrapper","className","maxValue","newValue","validateNewMax","minValue","validateNewMin","counterActionsReducer","state","action","type","counterValue","payload","maxToBeSet","minToBeSet","max","min","setErrorAC","CounterWrapper","MainBoardWrapper","ControlsWrapper","App","useReducer","counterState","counterActionsDispatch","useEffect","stringMax","localStorage","getItem","stringMin","stringCounter","Number","getStateFromStorageAC","setItem","JSON","stringify","newMax","setTimeout","newMin","Boolean","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b401bb5a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ntype IndicatorPropsType = {\r\n    mainValue: number\r\n    error: string\r\n    value1: number\r\n    value2: number\r\n    value1Label: string\r\n    value2Label: string\r\n    finish: boolean\r\n\r\n}\r\nexport const MainDisplay = (props: IndicatorPropsType) => {\r\n    return (\r\n        <Display error={props.error}>\r\n            <DisplayMainValue error={props.error} limitReached={props.finish}>\r\n                {props.error ? props.error : props.mainValue}\r\n            </DisplayMainValue>\r\n            <DisplayAdditionalInfoWrapper>\r\n                <CurrentLimitValue>{props.value1Label}: {props.value1}</CurrentLimitValue>\r\n                <CurrentLimitValue>{props.value2Label}: {props.value2}</CurrentLimitValue>\r\n            </DisplayAdditionalInfoWrapper>\r\n        </Display>\r\n\r\n    )\r\n}\r\n\r\n\r\ninterface DisplayProps {\r\n    error: string\r\n}\r\n\r\nconst Display = styled.div<DisplayProps>`\r\n  position: relative;\r\n  background-color: #50717b; /*for compatibility with older browsers*/\r\n  background-image: linear-gradient(#50717b, #8ecccc);\r\n  height: 100px;\r\n  border-radius: 10px;\r\n  font-size: 50px;\r\n  text-align: center;\r\n  color: #3a4042;\r\n  font-weight: bold;\r\n  /*border: 1px solid red;*/\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-shadow: rgba(44, 187, 99, .35) 0 -25px 18px -14px inset,\r\n  rgba(44, 187, 99, .25) 0 1px 2px,\r\n  rgba(44, 187, 99, .25) 0 2px 4px,\r\n  rgba(44, 187, 99, .25) 0 4px 8px,\r\n  rgba(44, 187, 99, .25) 0 8px 16px,\r\n  rgba(44, 187, 99, .25) 0 16px 32px;\r\n  justify-content: flex-end;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 2px;\r\n    left: 2px;\r\n    width: calc(100% - 4px);\r\n    height: 50%;\r\n    /*width: 300px;*/\r\n    background: linear-gradient(rgba(255, 255, 255, 0.8),\r\n    rgba(255, 255, 255, 0.2));\r\n    border-radius: 10px 10px 0 0;\r\n  }\r\n`\r\n\r\ninterface DisplayMainValueProps {\r\n    error: string\r\n    limitReached: boolean\r\n}\r\n\r\nconst DisplayMainValue = styled.div<DisplayMainValueProps>`\r\n  //border: 1px solid yellow;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  //align-items: flex-end;\r\n  align-items: ${props => props.error ? \"center\" : \"flex-end\"};\r\n  font-size: ${props => props.error ? \"18px\" : \"\"};\r\n  padding-top: ${props => props.error ? \"14px\" : \"\"};\r\n  color: ${props => props.limitReached || props.error ? \"rgba(180,53,53,0.6)\" : \"\"};\r\n`\r\nconst DisplayAdditionalInfoWrapper = styled.div`\r\n  display: flex;\r\n  padding: 0;\r\n  /*flex-direction: column;*/\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 8px;\r\n  /*border: 1px solid #fc0606;*/\r\n  /*width:100px;*/\r\n  /*height: 60px;*/\r\n`\r\n\r\nconst CurrentLimitValue = styled.div`\r\n  /*height: 20px;*/\r\n  /*border: 1px solid #a722d9;*/\r\n  min-width: 100px;\r\n  padding-bottom: 3px;\r\n`","import styled from \"styled-components\";\r\n\r\ntype ButtonType = {\r\n    name: string\r\n    // indicatorValue: number\r\n    disabled: boolean\r\n    callback: () => void\r\n}\r\n\r\nexport const Button = (props: ButtonType) => {\r\n    const onClickHandler = () => {\r\n        props.callback();\r\n    }\r\n    return (\r\n        <BlueButton\r\n            disabled={props.disabled}\r\n            onClick={onClickHandler}>{props.name}</BlueButton>\r\n    )\r\n}\r\n\r\n\r\nconst BlueButton = styled.button`\r\n  color: #212121;\r\n  font-size: 2em;\r\n  outline: none;\r\n  border: none;\r\n  background-color: ${props => props.disabled ? \"#505c5e\" : \"#8ecccc\"};\r\n  border-radius: 10px;\r\n  font-weight: bold;\r\n  height: 40px;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  //box-shadow: 2px 2px #212121;\r\n  box-shadow: ${props => !props.disabled ? \"rgba(44, 187, 99, .35) 0 -25px 18px -14px inset, rgba(44, 187, 99, .25) 0 1px 2px, rgba(44, 187, 99, .25) 0 2px 4px, rgba(44, 187, 99, .25) 0 4px 8px, rgba(44, 187, 99, .25) 0 8px 16px, rgba(44, 187, 99, .25) 0 16px 32px\" : \"rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px\"};\r\n\r\n\r\n  &:hover {\r\n    background-color: ${props => !props.disabled ? \"#50717b\" : \"\"};\r\n  }\r\n\r\n  &:active {\r\n    background-color: #50717b;\r\n    box-shadow: 0 0 #666;\r\n    transform: translate(3px, 3px);\r\n  }\r\n\r\n`\r\nconst GlimmeringButton = styled.button`\r\n\r\n  background-color: #c2fbd7;\r\n  border-radius: 100px;\r\n  box-shadow: rgba(44, 187, 99, .2) 0 -25px 18px -14px inset, rgba(44, 187, 99, .15) 0 1px 2px, rgba(44, 187, 99, .15) 0 2px 4px, rgba(44, 187, 99, .15) 0 4px 8px, rgba(44, 187, 99, .15) 0 8px 16px, rgba(44, 187, 99, .15) 0 16px 32px;\r\n  color: green;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  font-family: CerebriSans-Regular, -apple-system, system-ui, Roboto, sans-serif;\r\n  padding: 7px 20px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  transition: all 250ms;\r\n  border: 0;\r\n  font-size: 16px;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n\r\n  &:hover {\r\n    box-shadow: rgba(44, 187, 99, .35) 0 -25px 18px -14px inset, rgba(44, 187, 99, .25) 0 1px 2px, rgba(44, 187, 99, .25) 0 2px 4px, rgba(44, 187, 99, .25) 0 4px 8px, rgba(44, 187, 99, .25) 0 8px 16px, rgba(44, 187, 99, .25) 0 16px 32px;\r\n    transform: scale(1.05) rotate(-1deg);\r\n  }\r\n`","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n\r\ntype LimitValueInputType = {\r\n    label: string\r\n    currentValue: number\r\n    sendValueCallback: (newValue: number) => void\r\n}\r\n\r\nexport const LimitValueInput = (props: LimitValueInputType) => {\r\n    // debugger\r\n    const plusClickHandler = () => {\r\n        props.sendValueCallback(props.currentValue + 1)\r\n    }\r\n\r\n    const minusClickHandler = () => {\r\n        props.sendValueCallback(props.currentValue - 1)\r\n    }\r\n\r\n    return (\r\n        <LimitValueSetContainer>\r\n            <Label>{props.label}</Label>\r\n            {/*<Input value={props.currentValue} type=\"number\" min={\"0\"} onChange={newValueHandler}/>*/}\r\n            <LimitInputField><span\r\n                style={{\r\n                    // border: \"1px solid black\",\r\n                    display: \"inline-block\",\r\n                    height: \"100%\",\r\n                    paddingTop: \"10%\",\r\n                    paddingBottom: 0\r\n                }}>{props.currentValue}</span></LimitInputField>\r\n            <LimitValueControlsWrapper>\r\n                <LimitValueControlButtons\r\n                    onClick={plusClickHandler}>+</LimitValueControlButtons>\r\n                <LimitValueControlButtons\r\n                    onClick={minusClickHandler}>-</LimitValueControlButtons>\r\n            </LimitValueControlsWrapper>\r\n        </LimitValueSetContainer>\r\n    );\r\n};\r\n\r\n\r\nconst LimitValueSetContainer = styled.div`\r\n  width: 85%;\r\n  color: #8ecccc;\r\n  font-weight: bold;\r\n  display: flex;\r\n  padding: 10px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 10px;\r\n  //border: 1px solid #8ecccc;\r\n  margin-bottom: 5px;\r\n  margin-top: 5px;\r\n  //flex-direction: column;\r\n`\r\n\r\nconst LimitValueControlsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-left: 3px;\r\n`\r\n\r\nconst LimitValueControlButtons = styled.button`\r\n  cursor: pointer;\r\n  background-color: #8ecccc;\r\n  outline: none;\r\n  border: none;\r\n  margin: 1px;\r\n  width: 15px;\r\n  height: 15px;\r\n  border-radius: 3px;\r\n  //box-shadow: 2px 2px #212121;\r\n  box-shadow: rgba(44, 187, 99, .35) 0 -25px 18px -14px inset,\r\n  rgba(44, 187, 99, .25) 0 1px 2px,\r\n  rgba(44, 187, 99, .25) 0 2px 4px,\r\n  rgba(44, 187, 99, .25) 0 4px 8px,\r\n  rgba(44, 187, 99, .25) 0 8px 16px,\r\n  rgba(44, 187, 99, .25) 0 16px 32px;\r\n\r\n  font-weight: bold;\r\n  padding: 0;\r\n\r\n  &:hover {\r\n    background-color: #50717b;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #50717b;\r\n    box-shadow: 0 0 #666;\r\n    transform: translate(1px, 1px);\r\n  }\r\n`\r\n\r\nconst Input = styled.input`\r\n  width: 60px;\r\n  height: 35px;\r\n  font-size: 16px;\r\n  display: inline-block;\r\n  background-color: #50717b; /*for compatibility with older browsers*/\r\n  background-image: linear-gradient(#50717b, #8ecccc);\r\n  outline: none;\r\n  border-radius: 5px;\r\n  border: 2px solid #8ecccc;\r\n  //border: none;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  appearance: none;\r\n  //no pseudo-elements for input and other non-container things\r\n`\r\n\r\nconst LimitInputField = styled.div`\r\n  width: 60px;\r\n  height: 35px;\r\n  color: black;\r\n  font-size: 16px;\r\n  display: flex;\r\n  background-color: #50717b; /*for compatibility with older browsers*/\r\n  background-image: linear-gradient(#50717b, #8ecccc);\r\n  border-radius: 5px;\r\n  border-top: 1px solid #50717b;\r\n  border-left: 1px solid #50717b;\r\n  border-right: 1px solid #50717b;\r\n  //border: none;\r\n  font-weight: bold;\r\n  justify-content: center;\r\n  //align-items: center; //couldn't position pseudo-element in the right place so I went with some workarounds\r\n  outline: none;\r\n  box-shadow: rgba(44, 187, 99, .35) 0 -25px 18px -14px inset,\r\n  rgba(44, 187, 99, .25) 0 1px 2px,\r\n  rgba(44, 187, 99, .25) 0 2px 4px,\r\n  rgba(44, 187, 99, .25) 0 4px 8px,\r\n  rgba(44, 187, 99, .25) 0 8px 16px,\r\n  rgba(44, 187, 99, .25) 0 16px 32px;\r\n\r\n  &::after { //\"::\" - pseudo element, \":\" - pseudo-class\r\n    content: '';\r\n    position: absolute;\r\n    //top: 1px;\r\n    //left: 1px;\r\n    width: 60px;\r\n    height: 18px;\r\n    background: linear-gradient(rgba(255, 255, 255, 0.8),\r\n    rgba(255, 255, 255, 0.2));\r\n    border-radius: 5px 5px 0 0;\r\n  }\r\n`\r\n\r\nconst Label = styled.label`\r\n  text-shadow: 0 0 3px #fff;\r\n\r\n  paddingRight: 40px;\r\n  marginRight: 10px;\r\n\r\n`\r\n\r\n","import React from 'react';\r\nimport s from \"./Settings.module.css\"\r\nimport {LimitValueInput} from \"./LimitValueInput\";\r\nimport styled from \"styled-components\";\r\n\r\ntype SettingsPropsType = {\r\n    visible: boolean\r\n    maxValue: number\r\n    minValue: number\r\n    validateNewMax: (max: number) => void\r\n    validateNewMin: (min: number) => void\r\n}\r\n\r\nexport const Settings = (props: SettingsPropsType) => {\r\n    // debugger\r\n    let visibility = `${props.visible ? s.settingsVisible : s.settingsInvisible}`\r\n\r\n    return (\r\n        <SettingsWrapper className={visibility}>\r\n            <LimitValueInput label={\"max value\"} currentValue={props.maxValue}\r\n                             sendValueCallback={(newValue) => props.validateNewMax(newValue)}/>\r\n            <LimitValueInput label={\"min value\"} currentValue={props.minValue}\r\n                             sendValueCallback={(newValue) => props.validateNewMin(newValue)}/>\r\n        </SettingsWrapper>\r\n    );\r\n};\r\n\r\n\r\nconst SettingsWrapper = styled.div`\r\n  /*position: relative;*/\r\n  z-index: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  background-color: #3a4042;\r\n  width: 250px;\r\n  heigth: 500px;\r\n  border: 3px solid #8ecccc;\r\n  border-bottom: none;\r\n  border-radius: 10px 10px 0 0;\r\n  //box-shadow: 0 4px 8px 0 rgb(33, 33, 33), 0 6px 20px 0 rgb(33, 33, 33);\r\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px,\r\n  rgba(0, 0, 0, 0.22) 0px 15px 12px;\r\n  /*max-height: 0;*/\r\n  /*overflow: hidden;*/\r\n`\r\n\r\n","export type CounterStateType = {\r\n    counterValue: number\r\n    maxValue: number\r\n    minValue: number\r\n    error: string\r\n    settingsVisible: boolean\r\n    maxToBeSet: number,\r\n    minToBeSet: number\r\n}\r\n\r\nexport const counterActionsReducer = (state: CounterStateType, action: CounterActionsType): CounterStateType => {\r\n    switch (action.type) {\r\n        case \"INCREMENT\":\r\n            return {...state, counterValue: state.counterValue + 1}\r\n        case \"RESET\":\r\n            return {...state, counterValue: state.minValue}\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.payload.error}\r\n        // case \"APPLY-SETTINGS\":\r\n        //     return {...state, maxValue: action.payload.maxValue, minValue: action.payload.minValue}\r\n        case \"APPLY-SETTINGS\":\r\n            return {...state, maxValue: state.maxToBeSet, minValue: state.minToBeSet}\r\n        case \"SHOW-SETTINGS\":\r\n            return {...state, settingsVisible: true}\r\n        case \"HIDE-SETTINGS\":\r\n            return {...state, settingsVisible: false}\r\n        case \"GET-MAX-FROM-USER\":\r\n            return {\r\n                ...state, maxToBeSet: action.payload.max\r\n            }\r\n        case \"GET-MIN-FROM-USER\":\r\n            return {\r\n                ...state, minToBeSet: action.payload.min\r\n            }\r\n        case \"GET-STATE-FROM-STORAGE\": {\r\n            // debugger\r\n            return {\r\n                ...state,\r\n                maxValue: action.payload.maxValue,\r\n                minValue: action.payload.minValue,\r\n                counterValue: action.payload.counterValue,\r\n                maxToBeSet: action.payload.maxValue,\r\n                minToBeSet: action.payload.minValue\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\ntype CounterActionsType =\r\n    IncrementCounterActionType\r\n    | ResetCounterActionType\r\n    | SetErrorActionType\r\n    | ApplySettingsActionType\r\n    | ShowSettingsActionType\r\n    | HideSettingsActionType\r\n    // | GetSettingsFromUserActionType\r\n    | GetStateFromStorageActionType\r\n    | GetMaxFromUserActionType\r\n    | GetMinFromUserActionType\r\n\r\ntype IncrementCounterActionType = ReturnType<typeof incrementCounterAC>\r\n\r\nexport const incrementCounterAC = () => {\r\n    return {\r\n        type: \"INCREMENT\"\r\n    } as const\r\n}\r\n\r\ntype ResetCounterActionType = ReturnType<typeof resetCounterAC>\r\n\r\nexport const resetCounterAC = () => {\r\n    return {\r\n        type: \"RESET\"\r\n    } as const\r\n}\r\n\r\ntype SetErrorActionType = ReturnType<typeof setErrorAC>\r\n\r\nexport const setErrorAC = (error: string) => {\r\n    return {\r\n        type: \"SET-ERROR\",\r\n        payload: {\r\n            error\r\n        }\r\n    } as const\r\n}\r\n\r\n// type ApplySettingsActionType = ReturnType<typeof applySettingsAC>\r\n//\r\n// export const applySettingsAC = (max: number, min: number) => {\r\n//     return {\r\n//         type: \"APPLY-SETTINGS\",\r\n//         payload: {\r\n//             maxValue: max,\r\n//             minValue: min\r\n//         }\r\n//     } as const\r\n// }\r\n\r\ntype ApplySettingsActionType = ReturnType<typeof applySettingsAC>\r\n\r\nexport const applySettingsAC = () => {\r\n    return {\r\n        type: \"APPLY-SETTINGS\"\r\n    } as const\r\n}\r\n\r\ntype ShowSettingsActionType = ReturnType<typeof showSettingsAC>\r\n\r\nexport const showSettingsAC = () => {\r\n    return {\r\n        type: \"SHOW-SETTINGS\"\r\n    } as const\r\n}\r\n\r\ntype HideSettingsActionType = ReturnType<typeof hideSettingsAC>\r\n\r\nexport const hideSettingsAC = () => {\r\n    return {\r\n        type: \"HIDE-SETTINGS\"\r\n    } as const\r\n}\r\n\r\ntype GetMaxFromUserActionType = ReturnType<typeof getMaxFromUserAC>\r\n\r\nexport const getMaxFromUserAC = (max: number) => {\r\n    return {\r\n        type: \"GET-MAX-FROM-USER\",\r\n        payload: {\r\n            max\r\n        }\r\n    } as const\r\n}\r\n\r\ntype GetMinFromUserActionType = ReturnType<typeof getMinFromUserAC>\r\n\r\nexport const getMinFromUserAC = (min: number) => {\r\n    return {\r\n        type: \"GET-MIN-FROM-USER\",\r\n        payload: {\r\n            min\r\n        }\r\n    } as const\r\n}\r\n\r\n\r\ntype GetStateFromStorageActionType = ReturnType<typeof getStateFromStorageAC>\r\n\r\nexport const getStateFromStorageAC = () => {\r\n    debugger\r\n\r\n    let stringMax = localStorage.getItem('maxValue')\r\n    let stringMin = localStorage.getItem('minValue')\r\n    let stringCounter = localStorage.getItem('counterValue')\r\n    if (stringMax && stringMin && stringCounter) {\r\n        let storageMax = Number(stringMax)\r\n        let storageMin = Number(stringMin)\r\n        let storageCounterValue = Number(stringCounter)\r\n        return {\r\n            type: \"GET-STATE-FROM-STORAGE\",\r\n            payload: {\r\n                maxValue: storageMax,\r\n                minValue: storageMin,\r\n                counterValue: storageCounterValue\r\n            }\r\n        } as const\r\n    }\r\n    return {\r\n        type: \"ERROR-READING-LOCAL-STORAGE\"\r\n    } as const\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","import React, {useEffect, useReducer} from 'react';\nimport './App.css';\nimport {MainDisplay} from \"./components/MainDisplay\";\nimport {Button} from \"./components/Button\";\nimport {Settings} from \"./components/Settings\";\nimport styled from \"styled-components\";\nimport {\n    counterActionsReducer,\n    applySettingsAC,\n    setErrorAC,\n    showSettingsAC,\n    resetCounterAC,\n    hideSettingsAC,\n    incrementCounterAC,\n    getStateFromStorageAC,\n    getMaxFromUserAC,\n    getMinFromUserAC\n} from \"./state/counterActionsReducer\";\n\nfunction App() {\n\n    const [counterState, counterActionsDispatch] = useReducer(counterActionsReducer, {\n        counterValue: 0,\n        maxValue: 1,\n        minValue: 0,\n        error: '',\n        settingsVisible: false,\n        maxToBeSet: 0,\n        minToBeSet: 0\n    })\n\n    useEffect(() => {\n        // debugger\n        counterActionsDispatch(getStateFromStorageAC())\n    }, [])\n\n    const incrementCounter = () => {\n        // debugger\n        if (!counterState.settingsVisible && counterState.counterValue < counterState.maxValue) {\n            counterActionsDispatch(setErrorAC(''))\n            counterActionsDispatch(incrementCounterAC())\n        }\n        if (counterState.settingsVisible) {\n            counterActionsDispatch(setErrorAC('set your counter'))\n            setTimeout(() => counterActionsDispatch(setErrorAC('')), 1500)\n        }\n    }\n\n    const resetCounter = () => {\n        counterActionsDispatch(resetCounterAC())\n    }\n\n    const toggleSettingsVisibility = () => {\n        if (counterState.settingsVisible) {\n            // counterActionsDispatch(applySettingsAC(counterState.maxToBeSet, counterState.minToBeSet)) //could be done without parameters (copy from state inside reducer)\n            counterActionsDispatch(applySettingsAC()) //could be done without parameters (copy from state inside reducer)\n            counterActionsDispatch(hideSettingsAC())\n            counterActionsDispatch(resetCounterAC())\n        } else {\n            counterActionsDispatch(showSettingsAC())\n        }\n    }\n\n    useEffect(() => {\n        // debugger\n        localStorage.setItem('maxValue', JSON.stringify(counterState.maxValue))\n        localStorage.setItem('minValue', JSON.stringify(counterState.minValue))\n        localStorage.setItem('counterValue', JSON.stringify(counterState.counterValue))\n    }, [counterState.maxValue, counterState.minValue, counterState.counterValue])\n\n    const validateNewMax = (newMax: number) => {\n        if (newMax > counterState.minToBeSet && newMax > 0) {\n            counterActionsDispatch(setErrorAC(''))\n            counterActionsDispatch(getMaxFromUserAC(newMax))\n            // debugger\n\n        } else {\n            newMax <= counterState.minToBeSet ? counterActionsDispatch(setErrorAC('max must be above the min'))\n                : counterActionsDispatch(setErrorAC('negative values not allowed'))\n            setTimeout(() => counterActionsDispatch(setErrorAC('')), 1000)\n        }\n    }\n\n    const validateNewMin = (newMin: number) => {\n        if (newMin < counterState.maxToBeSet && newMin >= 0) {\n            counterActionsDispatch(setErrorAC(''))\n            counterActionsDispatch(getMinFromUserAC(newMin))\n\n        } else {\n            newMin >= counterState.maxToBeSet ? counterActionsDispatch(setErrorAC('min must be less than the max'))\n                : counterActionsDispatch(setErrorAC('negative values not allowed'))\n            setTimeout(() => counterActionsDispatch(setErrorAC('')), 1000)\n        }\n    }\n\n\n    return (\n        <CounterWrapper>\n            <Settings visible={counterState.settingsVisible}\n                      maxValue={counterState.maxToBeSet}\n                      minValue={counterState.minToBeSet}\n                      validateNewMax={validateNewMax}\n                      validateNewMin={validateNewMin}\n\n\n            />\n            <MainBoardWrapper>\n                <MainDisplay mainValue={counterState.counterValue} error={counterState.error}\n                             value1={counterState.maxValue} value2={counterState.minValue} value1Label={\"max\"}\n                             value2Label={\"start\"} finish={counterState.counterValue === counterState.maxValue}/>\n                <ControlsWrapper>\n                    <Button\n                        disabled={counterState.counterValue === counterState.maxValue || Boolean(counterState.error)}\n                        name={\"inc\"}\n                        callback={incrementCounter}\n                    />\n                    <Button\n                        disabled={counterState.counterValue === counterState.minValue || Boolean(counterState.error)}\n                        name={\"reset\"}\n                        callback={resetCounter}\n                    />\n                    <Button disabled={Boolean(counterState.error)}\n                            name={\"set\"}\n                            callback={toggleSettingsVisibility}\n                    />\n                </ControlsWrapper>\n            </MainBoardWrapper>\n        </CounterWrapper>\n\n    )\n}\n\n\nconst CounterWrapper = styled.div`\n  /*border: 2px solid black;*/\n  width: 330px;\n  height: 500px;\n  display: flex;\n  flex-direction: column;\n  /*flex-wrap: wrap;*/\n  justify-content: center;\n  align-items: center;\n\n`\n\nconst MainBoardWrapper = styled.div`\n  z-index: 3;\n  width: 300px;\n  height: 200px;\n  border: 3px solid #8ecccc;\n  padding: 10px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  background-color: #3a4042;\n  /*box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);*/\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px, rgba(0, 0, 0, 0.22) 0px 15px 12px;\n`\n\nconst ControlsWrapper = styled.div`\n  border: 3px solid #8ecccc;\n  margin-top: 20px;\n  border-radius: 10px;\n  height: 40%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-left: 10px;\n  padding-right: 10px;\n`\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Settings_error__2BG8_\",\"paramWrapper\":\"Settings_paramWrapper__28iw7\",\"settingsInvisible\":\"Settings_settingsInvisible__3Pb9B\",\"settingsVisible\":\"Settings_settingsVisible__MZpbg\",\"hidden\":\"Settings_hidden__LO732\",\"slowlyHide\":\"Settings_slowlyHide__Y5PM1\",\"showHidden\":\"Settings_showHidden__-Ld8-\"};"],"sourceRoot":""}